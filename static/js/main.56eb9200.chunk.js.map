{"version":3,"sources":["static/about.jpeg","static/project.jpeg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","src","alt","onClick","window","scroll","top","left","behavior","innerHeight","aboutBg","contentsBg","MenuItem","title","status","color","description","breakdown","demo","props","style","backgroundColor","href","target","rel","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,+LCmJ5BC,MA9If,WACE,OACE,yBAAKC,UAAU,OACb,6BAASA,UAAU,cACjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kBAAf,cACA,yBAAKA,UAAU,2BAAf,OACM,kCADN,2CAIF,yBACEA,UAAU,mBACVC,IAAI,2DACJC,IAAI,UAEN,yBAAKF,UAAU,mBACb,yBACEA,UAAU,cACVG,QAAS,WACPC,OAAOC,OAAO,CACZC,IAAK,EACLC,KAAM,IACNC,SAAU,aANhB,OAYA,yBACER,UAAU,cACVG,QAAS,WACPC,OAAOC,OAAO,CACZC,IAA0B,EAArBF,OAAOK,YACZF,KAAM,IACNC,SAAU,aANhB,SAYA,yBACER,UAAU,cACVG,QAAS,WACPC,OAAOC,OAAO,CACZC,IAA0B,EAArBF,OAAOK,YACZF,KAAM,IACNC,SAAU,aANhB,YAYA,yBACER,UAAU,cACVG,QAAS,WACPC,OAAOC,OAAO,CACZC,IAA0B,EAArBF,OAAOK,YACZF,KAAM,IACNC,SAAU,aANhB,oBAcJ,6BAASR,UAAU,YACjB,yBAAKA,UAAU,cACb,yBAAKA,UAAU,0BACb,yBAAKC,IAAKS,IAASR,IAAI,WAAWF,UAAU,oBAE9C,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,cAAf,SACA,yBAAKA,UAAU,oBAAf,waAWJ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,6BACb,yBACEC,IAAKU,IACLT,IAAI,cACJF,UAAU,uBAGd,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cAAf,YACA,yBAAKA,UAAU,oBAAf,oHAEoD,IAClD,8CAHF,QAGkC,2CAHlC,UAMF,yBAAKA,UAAU,aACb,kBAACY,EAAD,CACEC,MAAM,WACNZ,IAAI,8CACJa,OAAO,aAEPC,MAAM,oBACNC,YAAY,gDACZC,UAAU,0QACVC,KAAK,eAEP,kBAACN,EAAD,CACEC,MAAM,YACNZ,IAAI,wCACJa,OAAO,aACPC,MAAM,oBACNC,YAAY,8CACZE,KAAK,cAEP,kBAACN,EAAD,CACEC,MAAM,oBACNZ,IAAI,GACJa,OAAO,cACPC,MAAM,qBACNC,YAAY,yDACZE,KAAK,kBAIX,yBAAKlB,UAAU,uBACb,yBAAKA,UAAU,cAAf,kBACA,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,gCAAf,YACA,yBAAKA,UAAU,gCAAf,WACA,yBAAKA,UAAU,gCAAf,iBAUZ,SAASY,EAASO,GAChB,OACE,yBAAKnB,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mBAAmBmB,EAAMN,OACxC,yBACEb,UAAU,mBACVoB,MAAO,CAAEC,gBAAiBF,EAAMJ,QAE/BI,EAAML,SAGX,yBAAKd,UAAU,yBAAyBmB,EAAMH,aAE9C,yBAAKhB,UAAU,kBACE,KAAdmB,EAAMlB,IACL,uBACEqB,KAAMH,EAAMlB,IACZsB,OAAO,SACPC,IAAI,sBACJxB,UAAU,QAETmB,EAAMD,MAGT,6BAAMC,EAAMD,QClKFO,QACW,cAA7BrB,OAAOsB,SAASC,UAEe,UAA7BvB,OAAOsB,SAASC,UAEhBvB,OAAOsB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.56eb9200.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about.c17f5f90.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/project.76883a1f.jpeg\";","import React from \"react\";\nimport \"./App.css\";\nimport aboutBg from \"./static/about.jpeg\";\nimport contentsBg from \"./static/project.jpeg\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <section className=\"App-header\">\n        <div className=\"App-header-text\">\n          <div className=\"body-big-title\">Greetings.</div>\n          <div className=\"header-description-text\">\n            I'm <b>Adi</b>, a keen developer who loves to build!\n          </div>\n        </div>\n        <img\n          className=\"App-header-photo\"\n          src=\"https://ik.imagekit.io/m3aqkfw4pj/IMG_2057_lpkgmrUuj.jpg\"\n          alt=\"my dp\"\n        />\n        <div className=\"header-item-col\">\n          <div\n            className=\"header-item\"\n            onClick={() => {\n              window.scroll({\n                top: 0,\n                left: 1000,\n                behavior: \"smooth\",\n              });\n            }}\n          >\n            TOP\n          </div>\n          <div\n            className=\"header-item\"\n            onClick={() => {\n              window.scroll({\n                top: window.innerHeight * 1,\n                left: 1000,\n                behavior: \"smooth\",\n              });\n            }}\n          >\n            ABOUT\n          </div>\n          <div\n            className=\"header-item\"\n            onClick={() => {\n              window.scroll({\n                top: window.innerHeight * 2,\n                left: 1000,\n                behavior: \"smooth\",\n              });\n            }}\n          >\n            PROJECTS\n          </div>\n          <div\n            className=\"header-item\"\n            onClick={() => {\n              window.scroll({\n                top: window.innerHeight * 3,\n                left: 1000,\n                behavior: \"smooth\",\n              });\n            }}\n          >\n            QUALIFICATIONS\n          </div>\n        </div>\n      </section>\n      <section className=\"App-body\">\n        <div className=\"body-about\">\n          <div className=\"body-about-img-wrapper\">\n            <img src={aboutBg} alt=\"about bg\" className=\"body-about-img\" />\n          </div>\n          <div className=\"body-about-description\">\n            <div className=\"body-title\">ABOUT</div>\n            <div className=\"description-text\">\n              Hey There! My name is Adi Kishore and I'm currently a student\n              studying Software Engineering at UNSW. I'm a very passionate\n              developer who is extremely keen to jump in any problem space and\n              develop some cool solutions! I'm still in the exciting beginnings\n              of my journey but throughout my experience so far I've\n              successfully lead and executed a few projects as the full stack\n              lead, and am deeply interested to keep going!\n            </div>\n          </div>\n        </div>\n        <div className=\"body-contents\">\n          <div className=\"body-contents-img-wrapper\">\n            <img\n              src={contentsBg}\n              alt=\"contents bg\"\n              className=\"body-contents-img\"\n            />\n          </div>\n          <div className=\"body-header\">\n            <div className=\"body-title\">PROJECTS</div>\n            <div className=\"description-text\">\n              From the beginning of 2020, I have pursued my deep interest for\n              working on projects that solve real problems in a{\" \"}\n              <strong>meaningful</strong> and <strong>helpful</strong> way.\n            </div>\n          </div>\n          <div className=\"body-menu\">\n            <MenuItem\n              title=\"myLounge\"\n              src=\"https://www.youtube.com/watch?v=znZc0CzMUmQ\"\n              status=\"OPTIMISING\"\n              // color=\"rgb(57, 240, 112)\" completed colour\n              color=\"rgb(240, 170, 57)\"\n              description=\"Find where to stream Movies, Shows and Music.\"\n              breakdown=\"myLounge is a digital lounge that provides users the ability to browse multiple entertainment options. It allows filtering and searching of TV Shows, Movies, Podcasts and Music and immediately provides users a list of streaming services for a chosen media option.\"\n              demo=\"Video Demo\"\n            />\n            <MenuItem\n              title=\"Discovery\"\n              src=\"http://kishek2000.github.io/discovery\"\n              status=\"OPTIMISING\"\n              color=\"rgb(240, 170, 57)\"\n              description=\"Children's education made fun and engaging.\"\n              demo=\"Live Demo\"\n            />\n            <MenuItem\n              title=\"Sadafal Education\"\n              src=\"\"\n              status=\"RESEARCHING\"\n              color=\"rgb(129, 110, 237)\"\n              description=\"Discover your path of learning, and shape your career.\"\n              demo=\"Coming Soon\"\n            />\n          </div>\n        </div>\n        <div className=\"body-qualifications\">\n          <div className=\"body-title\">QUALIFICATIONS</div>\n          <div className=\"body-qualifications-row\">\n            <div className=\"body-qualifications-subtitle\">FRONTEND</div>\n            <div className=\"body-qualifications-subtitle\">BACKEND</div>\n            <div className=\"body-qualifications-subtitle\">FRONTEND</div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction MenuItem(props) {\n  return (\n    <div className=\"menu-item\">\n      <div className=\"menu-item-text\">\n        <div className=\"menu-item-title\">{props.title}</div>\n        <div\n          className=\"menu-item-status\"\n          style={{ backgroundColor: props.color }}\n        >\n          {props.status}\n        </div>\n      </div>\n      <div className=\"menu-item-description\">{props.description}</div>\n      {/* <div className=\"menu-item-breakdown\">{props.breakdown}</div> */}\n      <div className=\"menu-item-demo\">\n        {props.src !== \"\" ? (\n          <a\n            href={props.src}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"link\"\n          >\n            {props.demo}\n          </a>\n        ) : (\n          <div>{props.demo}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}